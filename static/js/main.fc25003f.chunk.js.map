{"version":3,"sources":["data/robotJSON.js","logo.svg","components/Button.js","components/Robot.js","components/Child.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","robotTasks","description","eta","robotTypes","UNIPEDAL","BIPEDAL","QUADRUPEDAL","ARACHNID","RADIAL","AERONAUTICAL","imageLoc","Button","props","state","time","value","startTimer","bind","e","target","classList","add","id","this","num","elem","document","getElementById","style","backgroundColor","fontWeight","borderLeft","timer","setInterval","clearInterval","innerHTML","split","setState","key","index","className","textAlign","onClick","color","React","Component","RobotInfo","name","type","indexArray","Robot","progress","getCard","String","parseInt","newState","dic","stateArray","Object","keys","map","sort","a","b","taskArray","renderState","console","log","randArray","i","length","push","inProgress","tasks","obj","borderRadius","border","marginBottom","fontSize","borderTop","src","toUpperCase","alt","maxHeight","maxWidth","Child","sendData","preventDefault","info","getRandom","addNames","alert","randIndex","Math","floor","random","tempVal","slice","options","onSubmit","htmlFor","placeholder","form","Parent","names","newName","j","robotInfo","class","display","renderRobot","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc25003f.chunk.js","sourcesContent":["const robotTasks = [\r\n    {\r\n        description: 'Do the Dishes',\r\n        eta: 4,\r\n    }, {\r\n        description: 'Sweep the House',\r\n        eta: 5,\r\n    }, {\r\n        description: 'Do the Laundry',\r\n        eta: 10,\r\n    }, {\r\n        description: 'Take out the Recycling',\r\n        eta: 6,\r\n    }, {\r\n        description: 'Make a Sammich',\r\n        eta: 7,\r\n    }, {\r\n        description: 'Mow the Lawn',\r\n        eta: 20,\r\n    }, {\r\n        description: 'Rake the Leaves',\r\n        eta: 18,\r\n    }, {\r\n        description: 'Give the Dog a Bath',\r\n        eta: 13,\r\n    }, {\r\n        description: 'Bake some Cookies',\r\n        eta: 8,\r\n    }, {\r\n        description: 'Wash the Car',\r\n        eta: 5,\r\n    }\r\n];\r\n\r\nconst robotTypes = [\r\n    {\r\n        UNIPEDAL: 'Unipedal',\r\n        BIPEDAL: 'Bipedal',\r\n        QUADRUPEDAL: 'Quadrupedal',\r\n        ARACHNID: 'Arachnid',\r\n        RADIAL: 'Radial',\r\n        AERONAUTICAL: 'Aeronautical'\r\n    }\r\n];\r\n\r\nconst imageLoc = {\r\n    UNIPEDAL: \"https://github.com/philipk19238/Bot-O-Mat/blob/master/src/data/images/unipedal.PNG?raw=true\",\r\n    BIPEDAL: \"https://github.com/philipk19238/Bot-O-Mat/blob/master/src/data/images/bipedal.PNG?raw=true\",\r\n    QUADRUPEDAL: \"https://github.com/philipk19238/Bot-O-Mat/blob/master/src/data/images/quad.PNG?raw=true\",\r\n    ARACHNID: \"https://github.com/philipk19238/Bot-O-Mat/blob/master/src/data/images/arachnid.PNG?raw=true\",\r\n    RADIAL: \"https://github.com/philipk19238/Bot-O-Mat/blob/master/src/data/images/air.PNG?raw=true\",\r\n    AERONAUTICAL: \"https://github.com/philipk19238/Bot-O-Mat/blob/master/src/data/images/air.PNG?raw=true\"\r\n}\r\n\r\nmodule.exports = { robotTasks, robotTypes, imageLoc }","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nexport class Button extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            time: this.props.value,\r\n        }\r\n        this.startTimer = this.startTimer.bind(this);\r\n    }\r\n\r\n    startTimer(e) {\r\n        e.target.classList.add('d-none');\r\n        var id = `robot${this.props.num}task${this.props.description}`;\r\n        var elem = document.getElementById(id)\r\n        elem.style.backgroundColor = \"yellow\";\r\n        elem.style.fontWeight = \"bold\";\r\n        elem.style.borderLeft = \"4px solid blue\";\r\n        this.timer = setInterval(() => {\r\n            if (this.state.time === 0) {\r\n                clearInterval(this.timer);\r\n                elem.style.backgroundColor = \"#56f58e\";\r\n                elem.style.borderLeft = \"4px solid gold\";\r\n                elem.innerHTML = this.props.description.split(\"task\")[1] + \" - Complete!\";\r\n            } else {\r\n                this.setState({\r\n                    time: this.state.time - 1\r\n                })\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <button key={this.props.index} value={this.props.value} id={`robot${this.props.num}task${this.props.description}`} className=\"list-group-item\" style={{borderLeft: \"4px solid green\", textAlign: \"left\"}}>\r\n                {this.props.description.split(\"task\")[1]} - ({this.state.time}) seconds\r\n                <button className=\"ml-1 btn btn-sm\" onClick={this.startTimer} style={{ backgroundColor: \"#b545de\", color: \"white\" }}>Start!</button></button>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { robotTasks, robotTypes, imageLoc } from \"../data/robotJSON.js\"\r\nimport { Button } from \"./Button\"\r\n\r\nexport class RobotInfo {\r\n    constructor(name, type, indexArray) {\r\n        this.name = name;\r\n        this.type = type;\r\n        this.indexArray = indexArray;\r\n    }\r\n}\r\n\r\nexport class Robot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            progress: {}\r\n        }\r\n        this.getCard = this.getCard.bind(this);\r\n    }\r\n    getCard(e) {\r\n        var id = String(e.target.id);\r\n        var value = parseInt(e.target.value);\r\n        e.target.classList.add('d-none');\r\n        var newState = this.state.progress;\r\n        newState[id] = value;\r\n        this.setState({ progress: newState });\r\n    }\r\n    renderState() {\r\n        var dic = this.state.progress;\r\n        var stateArray = Object.keys(dic).map(function (key) { return [key, dic[key]] });\r\n        stateArray.sort(function (a, b) { return a[1] - b[1] || a[0] > b[0] });\r\n        return stateArray\r\n    }\r\n    render() {\r\n        var taskArray = [];\r\n        var stateArray = this.renderState();\r\n        console.log(stateArray);\r\n        const randArray = this.props.randArray;\r\n        for (var i = 0; i < randArray.length; i++) taskArray.push(robotTasks[randArray[i]]);\r\n        const inProgress = stateArray.map(([description, eta], index) => <Button description={description} key={index} value={eta} index={index} num={this.props.num} />);\r\n        const tasks = taskArray.map((obj, index) =>\r\n            <button key={index} value={obj.eta} onClick={this.getCard} id={`robot${this.props.num}task${obj.description}`} className=\"list-group-item\" style={{textAlign: \"left\", borderLeft:\"4px solid green\"}}>\r\n                {obj.description} - ({obj.eta}) seconds</button>);\r\n        return (\r\n            <div className=\"col-md-auto\">\r\n                <div className=\"card ml-2 mr-2 mt-3 mb-3\" id={`robot${this.props.num}`} style={{ borderRadius: \"12px\", border: \"5px solid #b545de\" }}>\r\n                    <div className=\"card-header\" style={{ backgroundColor: \"#b545de\" }}></div>\r\n                    <h4 className=\"card-title ml-3 mt-2\" style={{ textAlign: \"left\", marginBottom: \"6px\", fontSize: \"13px\" }}>{this.props.type}</h4>\r\n                    <h4 className=\"card-title ml-3\" style={{ textAlign: \"left\", fontWeight: \"bold\" }}>{this.props.name}</h4>\r\n                    <p style={{ borderTop: \"2px solid gold\" }} className=\"mr-3 ml-3\"></p>\r\n                    <p style={{ textAlign: \"center\" }}><img className=\"card-img-top\" src={imageLoc[this.props.type.toUpperCase()]} alt=\"robot-img\" style={{ maxHeight: \"8rem\", maxWidth: \"10rem\" }} /></p>\r\n                    <p style={{ borderTop: \"2px solid gold\" }} className=\"mr-3 ml-3\"></p>\r\n                    <div className=\"card-body\">\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {inProgress}\r\n                            {tasks}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Robot, RobotInfo } from \"./Robot\"\r\nimport { robotTasks, robotTypes, imageLoc } from \"../data/robotJSON.js\"\r\n\r\nexport class Child extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.sendData = this.sendData.bind(this);\r\n    }\r\n    sendData(e) {\r\n        e.preventDefault();\r\n        var name = document.getElementById(\"name\").value;\r\n        var type = document.getElementById(\"robot-select\").value;\r\n        if (!name || !type) {\r\n            alert(\"Please give your robot a name and a type!\");\r\n            return;\r\n        }\r\n        var info = new RobotInfo(name, type, this.getRandom());\r\n        this.props.addNames(info);\r\n    }\r\n    getRandom() {\r\n        var indexArray = [];\r\n        for (var i = 0; i < robotTasks.length; i++) indexArray.push(i);\r\n        for (var i = 0; i < robotTasks.length; i++) {\r\n            var randIndex = Math.floor(Math.random() * robotTasks.length);\r\n            var tempVal = indexArray[i];\r\n            indexArray[i] = indexArray[randIndex];\r\n            indexArray[randIndex] = tempVal;\r\n        }\r\n        return indexArray.length > 4 ? indexArray.slice(6) : indexArray;\r\n    }\r\n\r\n    render() {\r\n        const options = Object.keys(robotTypes[0]).map((key, index) => <option value={robotTypes[0][key]} key={`type${index}`}>{robotTypes[0][key]}</option>);\r\n        return (\r\n            <div className=\"container mt-5 mb-5 d-flex justify-content-center\" style={{ border: \"5px solid #b545de\", borderRadius: \"12px\" }}>\r\n                <form onSubmit={this.sendData} id=\"robot-form\">\r\n                    <div className=\"form-row mt-3\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"name\" style={{ fontWeight: \"bold\" }}>Robot Name</label>\r\n                            <input type=\"text\" placeholder=\"Enter Name\" id=\"name\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"robot-select\" style={{ fontWeight: \"bold\" }}>Robot Type</label>\r\n                            <select form=\"robot-form\" id=\"robot-select\" className=\"form-control\">\r\n                                {options}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <p style={{ textAlign: \"center\" }}><button type=\"submit\" className=\" btn btn-primary mb-3 btn-block\" style={{backgroundColor: \"#b545de\", color: \"white\", border: \"none\"}}>Submit</button></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Child } from './Child'\r\nimport { Robot } from './Robot'\r\n\r\nexport class Parent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { names: [] }\r\n        this.addNames = this.addNames.bind(this);\r\n    }\r\n    addNames(newName) {\r\n        this.setState({ names: [...this.state.names, newName] });\r\n    }\r\n    renderRobot() {\r\n        var elem = []\r\n        for (var j = 0; j < this.state.names.length; j++) {\r\n            var robotInfo = this.state.names[j];\r\n            elem.push(<Robot name={robotInfo.name} type={robotInfo.type} key={j} num={j} randArray={robotInfo.indexArray} />)\r\n        }\r\n        return elem;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav class=\"navbar d-flex justify-content-center\" style={{ backgroundColor: \"#b545de\" }}>\r\n                    <h1 style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"50px\", display: \"block\", color: \"white\" }} className=\"m-2\">Bot-O-Mat</h1>\r\n                </nav>\r\n                <Child addNames={this.addNames} />\r\n                <div className=\"container-fluid col-sm-12 col-lg-9\">\r\n                    <div className=\"row d-flex justify-content-center mx-auto\">\r\n                        {this.renderRobot()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Parent} from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Parent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}